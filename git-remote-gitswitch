#!/usr/bin/env python3

# Copyright (c) 2015, Robert Escriva
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     * Redistributions of source code must retain the above copyright notice,
#       this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of GitSwitch nor the names of its contributors may be
#       used to endorse or promote products derived from this software without
#       specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This is a plugin for git, to enable cloning URLs of the form
# gitswitch://example.com/repo.  For details of how this interacts with git, see
# the gitremote-helpers(1) manual page.
#
# This helper is a loose wrapper around the HTTP{,S} remote helpers.  It sets up
# the environment to hijack the username/password prompts and provide a username
# of "macaroons" and a password that is the set of macaroons.

import os
import subprocess
import sys

def transform(a):
    if a.startswith('gitswitch://'):
        return 'http://' + a[12:]
    return a

def select_url(args):
    for a in args:
        if transform(a) != a:
            return a

url = select_url(sys.argv[1:])
if url is None:
    sys.stderr.write('no valid gitswitch URL')
    sys.exit(1)
args = [transform(a) for a in sys.argv[1:]]
os.environ['GIT_ASKPASS'] = 'gitswitch-askpass'
os.environ['GITSWITCH_URL'] = url
sys.exit(subprocess.call(['git', 'remote-http'] + args))
